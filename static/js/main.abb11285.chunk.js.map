{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobot","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAU,iDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCSGK,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAAyBR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAAvEM,EAAOG,GAAGR,UCKlBS,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCgCDI,G,wDAjCb,aAAe,IAAD,8BACZ,gBAcJC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAdxC,EAAKC,MAAQ,CACXhB,OAAQ,GACRa,YAAa,IAJH,E,gEAQK,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACZ,OAAQqB,S,+BAQ9B,IAAD,OACDC,EAAgBC,KAAKP,MAAMhB,OAAOwB,QAAO,SAAAC,GAC7C,OAAOA,EAAMhC,KAAKiC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAElE,OACE,sBAAK9B,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAckB,KAAKb,iBAC9B,cAAC,EAAD,CAAUV,OAAQsB,W,GA5BRM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,eAAC,IAAMC,WAAP,eACG,cAAC,EAAD,IADH,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.abb11285.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n  return (\r\n    <div className='bg-orange dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n      <img src={`https://robohash.org/${id}?200x200`} alt='Robots'/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n          );         \r\n        })\r\n      } \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search' \r\n      placeholder='search robots' \r\n      onChange={searchChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\n//import {robots} from './robots';\r\nimport SearchBox from './SearchBox';\r\n//import Scroll from './Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\ncomponentDidMount() {\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(users => this.setState({robots: users}));\r\n}\r\n\r\n  //the following is an invented function, there is no reserved word \"onSearchChange\"\r\nonSearchChange = (event) => { \r\n  this.setState({ searchfield: event.target.value }) \r\n}\r\n\r\n  render() {\r\n    const filteredRobot = this.state.robots.filter(robot => { //NB IN VIDEO IT IS robots\r\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n    return (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <CardList robots={filteredRobot}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    (<App />)\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}